@import "~styles/variables";

// Styles for common Vue transitoins. See documentation for more info
// on the various classes that are applied
// See more info here: https://vuejs.org/v2/guide/transitions.html

$fast: .1s;
$normal: .3s;
$slow: 1.5s;


/**
  @prop {key-frame} animation - the name of the animation
  @prop {duration} duration - the duration of the animation
  @prop {boolean=true} reverseOut - if the animation should be played in reverse on the way out
  @prop {duration} outDuration - the duration of the animation on the way out
 */
@mixin vue-animation($animation, $duration, $outAnimation, $reverseOut: true, $outDuration: $duration, $once:false) {
  &-enter-active {
    animation: $animation $duration
  }
  &-leave-active {
    @if (not($once)) {
      animation: $outAnimation $outDuration;
      @if $reverseOut {
        animation-direction: reverse;
      }
    }
  }
}


/**
  Provide duration, with units, e.g. 2ms or .5s
  Provide the props that should be transitioned, such as all
 */
@mixin vue-transition($duration, $props:all, $outDuration:null, $leaveActivePosition:null) {
  &-enter-active {
    @if (not($leaveActivePosition)) {
      transition: #{$props} $duration;
    }
  }
  &-leave-active {
    @if ($leaveActivePosition) {
      position: $leaveActivePosition;
    } @else {
      transition: #{$props} if($outDuration, $outDuration, $duration);
    }
  }

  &-enter,
  &-leave-to {
    @content;
  }

}

/**
  @param {string} name - Provide the name of the transition as a string (i.e. wrapped in quotes)
  @param {duration} duration - the duration of the animation with units (e.g. 2ms, .5s)
  @param {attributes} props - the props to transition
  @param {content} @content - the styles to apply on the transition. Passed as a block after the @include function
 */
@mixin createTransition($name, $duration, $props:all, $outDuration: null, $leaveActivePosition:null) {
  .#{$name} {
    @include vue-transition($duration, $props, $outDuration: $outDuration, $leaveActivePosition: $leaveActivePosition) {
      @content
    }
  }
}

@mixin createAnimation($name,$animation, $duration, $reverseOut: true, $outDuration: $duration, $outAnimation:$animation, $once: false) {
  .#{$name} {
    @include vue-animation($animation, $duration, $outAnimation, $reverseOut: $reverseOut, $outDuration: $outDuration, $once: $once)
  }
}

@include createTransition("fade-in", $normal) {
  opacity: 0;
}

@include createTransition("fade-in-fast", $fast) {
  opacity: 0;
}

@include createTransition("fade-in-slow", $slow) {
  opacity: 0;
}

@include createTransition("fade-out", .3s, $leaveActivePosition: absolute) {
  opacity: 0;
  transform: translateX(50px);
  //transition: all 2s;
  //height: 0;

}


@include createTransition("fade-up", $normal) {
  opacity: 0;
  transform: translateY(15px);
}

@include createTransition("fade-out-left", $fast) {
  opacity: 0;
  transform: translateX(-50px);
}

.slide-leave-active,
.slide-enter-active {
  transition: .2s;
}

.slide-enter {
  transform: translate(100%, 0);
}

.slide-leave-to {
  transform: translate(-100%, 0);
}


.slide-out-leave-active,
.slide-out-enter-active {
  transition: .2s;
}

.slide-out-enter {
  transform: translate(-100%, 0);
}

.slide-out-leave-to {
  transform: translate(100%, 0);
}


@include createAnimation("bounce", bounce-in, $normal);
@include createAnimation("fade-down", fade-down cubic-bezier(.42, .97, .52, 1.49), .3s, $outDuration: $fast);

@include createAnimation("celebrate", bounce-in, $normal, $reverseOut: false, $outAnimation: fade-out, $outDuration: $normal)

@keyframes bounce-in {
  0% {
    transform: scale(0);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes fade-out {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }

}

@keyframes fadein {
  0% {
    opacity: 0;
  }
}

@keyframes fade-down {
  0% {
    opacity: 0;
    transform: translateY(-20px) scale(.8) translateX(15px);

  }
  75% {
    //transform: translateY(5px)
    transform: scale(1);

  }
  100% {
    //opacity: 1;
    //transform: scaleX(1);
  }
}


.crossfade-leave-active,
.crossfade-enter-active {
  transition: 1.2s;
}

.crossfade-enter {
  opacity: 0;
}

.crossfade-leave-to {
  opacity: 0;
}


.component-fade-enter-active, .component-fade-leave-active {
  transition: opacity .15s ease;
}
.component-fade-enter, .component-fade-leave-to
  /* .component-fade-leave-active below version 2.1.8 */ {
  opacity: 0;
}


.slide-left-leave-active,
.slide-left-enter-active {
  transition: .25s ease-in-out;
}
.slide-left-enter {
  transform: translate(100%, 0);
}
.slide-left-leave-to {
  transform: translate(-100%, 0);
}



.slide-right-leave-active,
.slide-right-enter-active {
  transition: .25s ease-in-out;
}
.slide-right-enter {
  transform: translate(-100%, 0);
}
.slide-right-leave-to {
  transform: translate(100%, 0);
}
