@mixin fancyLink {
  background-image: linear-gradient($pink, $pink);
  background-position: 0 100%;
  background-repeat: no-repeat;
  background-size: 100% .8rem;
  color: $darkText;
  padding: .2rem;
  text-decoration: none;
  transition: background-size cubic-bezier(0, .5, 0, 1) .3s;

  &:hover {
    background-image: linear-gradient($yellow, $yellow);
    background-size: 100% 100%;
    text-decoration: none;
  }
}

@mixin popoverShadow {
  box-shadow: rgba(122, 56, 20, 0.18) 0 11px 28px -8px;
}

@mixin shadowbox {
  background-color: white;
  border-radius: 12px;
  box-shadow: rgba(122, 56, 20, 0.18) 0 11px 28px -8px;
}

$widthXxs: 374;
$widthXs: 600;
$widthS: 768;
$widthM: 960;
$widthL: 1024;
$widthXL: 1140;
$widthXXL: 1500;

$widthTinyPhone: $widthXxs;
$widthPhone: $widthXs;
$widthLargePhone: $widthS;
$widthTablet: $widthM;
$widthDesktop: $widthXL;


/* MEDIA QUERIES */
@mixin maxW($point) {
  @media (max-width: #{$point}px) {
    @content;
  }
}

@mixin minW($point) {
  @media (min-width: #{$point}px) {
    @content;
  }
}

@mixin widthBetween($min, $max) {
  @media (min-width: #{$min}px) and (max-width: #{$max}px) {
    @content;
  }
}

@mixin isTinyPhone(){
  @include maxW($widthTinyPhone){
    @content;
  }
}

@mixin isPhone() {
  @include maxW($widthPhone) {
    @content;
  }
}

@mixin biggerThanTinyPhone() {
  @include minW($widthTinyPhone) {
    @content;
  }
}


@mixin biggerThanPhone() {
  @include minW($widthPhone) {
    @content;
  }
}

@mixin phoneOrBigger() {
  @include minW($widthPhone) {
    @content;
  }
}

@mixin largePhoneOrBigger() {
  @include minW($widthLargePhone) {
    @content;
  }
}


@mixin isTablet() {
  @include widthBetween($widthTablet, $widthDesktop) {
    @content;
  }
}


@mixin biggerThanTablet() {
  @include minW($widthTablet) {
    @content;
  }
}



@mixin smallerThanLargePhone() {
  @include maxW($widthLargePhone) {
    @content;
  }
}

@mixin smallerThanPhone() {
  @include maxW($widthPhone - 1) {
    @content;
  }
}



@mixin smallerThanTablet() {
  @include maxW($widthTablet) {
    @content;
  }
}



@mixin isDesktop() {
  @include minW($widthDesktop) {
    @content;
  }
}

@mixin r( $point ) {
  @if $point==600 {
    @media (min-width: 600px) {
      @content;
    }
  }
  @if $point==768 {
    @media (min-width: 768px) {
      @content;
    }
  }
  @if $point==960 {
    @media (min-width: 960px) {
      @content;
    }
  }
  @if $point==1024 {
    @media (min-width: 1024px) {
      @content;
    }
  }
  @if $point==1140 {
    @media (min-width: 1140px) {
      @content;
    }
  }
  @if $point==1500 {
    @media (min-width: 1500px) {
      @content;
    }
  }
}

/*height*/
@mixin h( $point ) {
  @if $point==768 {
    @media (min-height: 768px) {
      @content;
    }
  }
  @if $point==960 {
    @media (min-height: 960px) {
      @content;
    }
  }
}

/* ANIMATIONS */

@keyframes slide {
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes blink {
  50% {
    opacity: 0;
  }
}

@keyframes turn {
  100% {
    transform: rotate(90deg);
  }
}

@keyframes wiggle {
  50% {
    transform: rotate(-5deg);
  }
  75% {
    transform: rotate(5deg);
  }
  100% {
    transform: rotate(0);
  }
}

@keyframes grow {
  100% {
    transform: scale(2);
  }
}
@keyframes growingLeaves {
    100% {
        transform: scale(1) translate(0,0);
    }
}
@keyframes growingLeaves2 {
    0% {
        opacity: 0;
    }
    5% {
        opacity: 1;
    }
    100% {
        opacity: 1;
        transform: scale(1) translate(0,0);
    }
}
