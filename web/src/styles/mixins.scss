@import "variables";

@mixin fancyLink {
  background-image: linear-gradient($pink, $pink);
  background-position: 0 100%;
  background-repeat: no-repeat;
  background-size: 100% .8rem;
  color: $darkText;
  padding: .2rem;
  text-decoration: none;
  transition: background-size cubic-bezier(0, .5, 0, 1) .3s;

  &:hover {
    background-image: linear-gradient($yellow, $yellow);
    background-size: 100% 100%;
    text-decoration: none;
  }
}

@mixin fancyLinkLight {
  background-image: linear-gradient(lighten($darkestGreen, 15%), lighten($darkestGreen, 15%));
  background-position: 0 100%;
  background-repeat: no-repeat;
  background-size: 100% .8rem;
  color: $white;
  padding: .2rem;
  text-decoration: none;
  transition: background-size cubic-bezier(0, .5, 0, 1) .3s;

  &:hover {
    background-image: linear-gradient(lighten($darkestGreen, 20%), lighten($darkestGreen, 20%));
    background-size: 100% 100%;
    text-decoration: none;
  }
}

@mixin popoverShadow {
  box-shadow: rgba(122, 56, 20, 0.18) 0 11px 28px -8px;
}

@mixin shadowbox {
  background-color: white;
  border-radius: 12px;
  box-shadow: 0 6.9px 21px -24px rgba(0, 0, 0, 0.012),
  0 11.5px 32.3px -24px rgba(0, 0, 0, 0.036),
  0 13.9px 37.7px -24px rgba(0, 0, 0, 0.074),
  0 24px 63px -24px rgba(0, 0, 0, 0.15);
}

$widthXxs: 374;
$widthXs: 600;
$widthS: 768;
$widthM: 960;
$widthL: 1024;
$widthXL: 1140;
$widthXXL: 1500;

$widthTinyPhone: $widthXxs;
$widthPhone: $widthXs;
$widthLargePhone: $widthS;
$widthTablet: $widthM;
$widthDesktop: $widthXL;


/* MEDIA QUERIES */
@mixin maxW($point) {
  @media (max-width: #{$point}px) {
    @content;
  }
}

@mixin minW($point) {
  @media (min-width: #{$point}px) {
    @content;
  }
}

@mixin widthBetween($min, $max) {
  @media (min-width: #{$min}px) and (max-width: #{$max}px) {
    @content;
  }
}

@mixin isTinyPhone() {
  @include maxW($widthTinyPhone) {
    @content;
  }
}

@mixin isPhone() {
  @include maxW($widthPhone) {
    @content;
  }
}

@mixin biggerThanTinyPhone() {
  @include minW($widthTinyPhone) {
    @content;
  }
}


@mixin biggerThanPhone() {
  @include minW($widthPhone) {
    @content;
  }
}

@mixin phoneOrBigger() {
  @include minW($widthPhone) {
    @content;
  }
}

@mixin largePhoneOrBigger() {
  @include minW($widthLargePhone) {
    @content;
  }
}


@mixin isTablet() {
  @include widthBetween($widthTablet, $widthDesktop) {
    @content;
  }
}


@mixin biggerThanTablet() {
  @include minW($widthTablet) {
    @content;
  }
}


@mixin smallerThanLargePhone() {
  @include maxW($widthLargePhone) {
    @content;
  }
}

@mixin smallerThanPhone() {
  @include maxW($widthPhone - 1) {
    @content;
  }
}


@mixin smallerThanTablet() {
  @include maxW($widthTablet) {
    @content;
  }
}


@mixin isDesktop() {
  @include minW($widthDesktop) {
    @content;
  }
}

@mixin r( $point ) {
  @if $point==374 {
    @media (min-width: 374px) {
      @content;
    }
  }
  @if $point==600 {
    @media (min-width: 600px) {
      @content;
    }
  }
  @if $point==768 {
    @media (min-width: 768px) {
      @content;
    }
  }
  @if $point==960 {
    @media (min-width: 960px) {
      @content;
    }
  }
  @if $point==1024 {
    @media (min-width: 1024px) {
      @content;
    }
  }
  @if $point==1140 {
    @media (min-width: 1140px) {
      @content;
    }
  }
  @if $point==1200 {
    @media (min-width: 1200px) {
      @content;
    }
  }
  @if $point==1500 {
    @media (min-width: 1500px) {
      @content;
    }
  }
}

/*height*/
@mixin h( $point ) {
  @if $point==600 {
    @media (min-height: 600px) {
      @content;
    }
  }
  @if $point==768 {
    @media (min-height: 768px) {
      @content;
    }
  }
  @if $point==960 {
    @media (min-height: 960px) {
      @content;
    }
  }
}

/* ANIMATIONS */

@keyframes slide {
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes blink {
  50% {
    opacity: 0;
  }
}

@keyframes turn {
  100% {
    transform: rotate(90deg);
  }
}

@keyframes wiggle {
  50% {
    transform: rotate(-5deg);
  }
  75% {
    transform: rotate(5deg);
  }
  100% {
    transform: rotate(0);
  }
}

@keyframes grow {
  100% {
    transform: scale(2);
  }
}

@keyframes growingLeaves {
  100% {
    transform: scale(1) translate(0, 0);
  }
}

@keyframes growingLeaves2 {
  0% {
    opacity: 0;
  }
  5% {
    opacity: 1;
  }
  100% {
    opacity: 1;
    transform: scale(1) translate(0, 0);
  }
}

@mixin secondaryButton() {
  background-color: $white;
  border: 1px solid $lightestGreen;
  box-shadow: none;
  color: $darkestGreen;
  padding: 1.2rem 2.4rem;

  @include r(600) {
    &:hover:enabled {
      background-color: transparentize($lightestGreen, .6);
    }
  }
}

@mixin tertiaryButton() {
  background-color: transparent;
  box-shadow: none;
  color: $darkGreen;

  @include r(600) {
    &:hover {
      background-color: $lightGreen;
    }
  }

  &.red {
    color: $red;

    @include r(600) {
      &:hover {
        background-color: transparent;
      }
    }
  }
}

@mixin smallButton() {
  box-shadow: none;
  font: 1.6rem $font-stack;
  padding: .8rem 1.6rem;
}

@mixin iconButton() {
  align-items: center;
  display: flex;
  flex-grow: 0;
  justify-content: center;
  margin: 0;
  padding: 1.2rem;
}

@mixin button {
  background-color: $green;
  border: 0;
  text-align: center;
  border-radius: 3rem;
  box-shadow: inset 0 -4px 0 0 rgba(0, 0, 0, 0.2);
  color: white;
  cursor: pointer;
  flex-grow: 1;
  font: 1.8rem $font-stack;
  margin: 0;
  padding: 1.2rem 2.4rem 1.6rem;
  transition: box-shadow .2s ease-in-out, background-color .2s ease-in-out, opacity .3s;
  text-decoration: none;

  @include r(768) {
    max-width: 28rem;
  }

  &:hover {
    cursor: pointer;
    background-color: darken($green, 5%);
  }

  &:active {
    box-shadow: none;
  }

  &:disabled, &.disabled {
    background-color: #ccc;
    box-shadow: none;
    color: $darkText;
    cursor: default;
    text-indent: 1.2rem;

    &:not(.no-loading) {
      &:before {
        animation: rotate 1s linear infinite;
        background: url(/assets/images/loading.svg) no-repeat;
        background-size: 1.6rem;
        content: '';
        display: block;
        height: 1.6rem;
        margin: .4rem 0 0 -.8rem;
        margin-top: .4rem;
        position: absolute;
        transform-origin: center;
        width: 1.6rem;
        z-index: 1;
      }

      &.loading-white {
        &:before {
          background: url(/assets/images/loading-white.svg) no-repeat;
          background-size: 1.6rem;
        }
      }
    }
  }

  &.icon {
    @include iconButton;
  }

  &.secondary {
    @include secondaryButton;

    &.onDark {
      background: transparent;
      border-color: transparentize($white, .8);
      color: $white;

      &:hover {
        background-color: transparentize($white, .8);
      }
    }
  }

  &.tertiary {
    @include tertiaryButton;
  }

  &.small {
    @include smallButton;
  }

  &.link.fancy {
    background-color: transparent;
    border-radius: 0;
    border-bottom: 0;
    box-shadow: none;
    @include fancyLink
  }
}

@mixin blueWavyBackground {
  background-attachment: fixed;
  background-color: $darkestGreen;
  background-image: url(/assets/images/grainy.png), url(/assets/images/loginBG-left.svg), url(/assets/images/loginBG-right.svg);
  background-position: center, right 25% top 0, 100% 100%;
  background-size: auto, cover, 50%;
  background-repeat: repeat, no-repeat, no-repeat;

  @include r(600) {
      background-position: center, right 2rem top 0, 100% 100%;
  }
  @include r(1500) {
      background-position: center, left -38rem top 0, 100% 100%;
  }
}

@mixin trialBadge {
  background-color: transparentize($royal, .4);
  border-radius: 2rem;
  display: inline-block;
  font-size: 1.4rem;
  font-weight: bold;
  letter-spacing: 1px;
  margin-left: .8rem;
  padding: .4rem .8rem;
  text-transform: uppercase;
  vertical-align: baseline;
}

@mixin accountBox {
  align-items: center;
  background-color: lighten($lightestGreen, 9%);
  border-radius: .8rem;
  display: flex;
  padding: .4rem 1.6rem;
  width: 100%;
}
