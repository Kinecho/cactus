{
    "name": "functions",
    "scripts": {
        "build": "tsc",
        "build:deploy": "tsc -p tsconfig.prod.json",
        "config:get": "firebase functions:config:get > .runtimeconfig.json -P stage",
        "debug:func": "functions inspect mailchimp",
        "deploy:stage": "firebase deploy --only functions -P stage",
        "deploy:stage:func": "func() { npx firebase deploy -P stage --only functions:\"$1\"; }; func",
        "deploy:prod": "firebase deploy --only functions -P prod",
        "deploy:prod:func": "func() { npx firebase deploy -P prod --only functions:\"$1\"; }; func",
        "emulator:start": "firebase emulators:start --only functions",
        "lint": "tslint --project tsconfig.json",
        "lint:ci": "tslint --project tsconfig.json --format junit --out reports/tests/tslint/results.xml",
        "logs": "firebase functions:log",
        "ngrok": "ngrok http -subdomain=cactuslocal 5000",
        "serve": "npm run config:get && npm run build && IS_EMULATOR=true firebase serve --only functions",
        "emulate:funcs": "npm run config:get && npm run build && IS_EMULATOR=true firebase emulators:start --only functions",
        "emulate:funcs:db": "npm run config:get && npm run build && IS_EMULATOR=true firebase emulators:start --only functions,firestore",
        "emulate:db": "firebase emulators:start --only firestore",
        "shell": "npm run build && firebase functions:shell",
        "start": "npm run shell",
        "test": "FIRESTORE_EMULATOR_HOST=localhost:5005 jest",
        "test:ci": "FIRESTORE_EMULATOR_HOST=localhost:5005 TZ=America/Denver JEST_JUNIT_OUTPUT=reports/tests/jest/results.xml jest --silent --ci --coverageDirectory reports/coverage --coverage --runInBand --reporters=default --reporters=jest-junit",
        "test:watch": "jest --watch",
        "watch": "tsc -w"
    },
    "engines": {
        "node": "8"
    },
    "main": "lib/functions/src/main.js",
    "_moduleAliases": {
        "@api": "lib/functions/src",
        "@shared": "lib/shared/src"
    },
    "dependencies": {
        "@google-cloud/bigquery": "^4.1.4",
        "@google-cloud/pubsub": "^0.30.1",
        "@google-cloud/storage": "^3.0.2",
        "@sendgrid/helpers": "^6.4.0",
        "@sendgrid/inbound-mail-parser": "^6.4.0",
        "@sendgrid/mail": "^6.4.0",
        "@sentry/integrations": "^5.5.0",
        "@sentry/node": "^5.6.0",
        "@slack/client": "^5.0.1",
        "axios": "^0.19.0",
        "body-parser": "^1.19.0",
        "busboy": "^0.3.1",
        "chalk": "^2.4.2",
        "cors": "^2.8.5",
        "email-addresses": "^3.0.3",
        "express": "^4.17.0",
        "express-formidable": "^1.2.0",
        "firebase-admin": "^8.2.0",
        "firebase-functions": "^3.0.1",
        "fs-extra": "^8.1.0",
        "get-urls": "^9.1.0",
        "google-auth-library": "^4.2.5",
        "googleapis": "^42.0.0",
        "lodash": "^4.17.15",
        "lodash.camelcase": "^4.3.0",
        "luxon": "^1.15.0",
        "mailparser": "^2.7.1",
        "md5": "^2.2.1",
        "module-alias": "^2.2.0",
        "multer": "^1.4.1",
        "node-email-reply-parser": "^0.1.1",
        "pretty-ms": "^5.0.0",
        "query-string": "^6.7.0",
        "raw-body": "^2.4.0",
        "stripe": "^7.3.0",
        "uuid": "^3.3.2"
    },
    "devDependencies": {
        "@firebase/testing": "^0.11.5",
        "@google-cloud/functions-emulator": "^1.0.0-beta.6",
        "@types/busboy": "^0.2.3",
        "@types/express": "^4.16.1",
        "@types/jest": "^24.0.13",
        "@types/luxon": "^1.15.1",
        "@types/mailparser": "^2.4.0",
        "@types/md5": "^2.1.33",
        "@types/multer": "^1.3.7",
        "@types/node": "^12.0.2",
        "@types/stripe": "^6.30.3",
        "@types/uuid": "^3.4.5",
        "firebase": "^6.2.0",
        "firebase-functions-test": "^0.1.6",
        "firebase-tools": "^7.0.0",
        "jest": "^24.8.0",
        "jest-junit": "^6.4.0",
        "ts-jest": "^24.0.2",
        "ts-node": "^8.3.0",
        "tslint": "^5.18.0",
        "typescript": "^3.2.2"
    },
    "private": true
}
