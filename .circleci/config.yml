# Javascript Node CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
orbs:
  slack: circleci/slack@3.2.0 #https://github.com/CircleCI-Public/slack-orb

executors:
  cactus-web:
    working_directory: ~/project
    docker:
      - image: circleci/node:8.15.0-browsers


aliases:
  ## WEB CACHES
  - &web-dependency-key
    key: web-dependency-{{ .Branch }}-{{ checksum "web/package.json" }}
  - &web-dependency-keys
    keys:
      - web-dependency-{{ .Branch }}-{{ checksum "web/package.json" }}
      - web-dependency-{{ .Branch }}-
      - web-dependency-
  - &restore-web-dependencies
    name: Restore Web Dependency Cache
    <<: *web-dependency-keys

  ## SHARED CACHES
  - &shared-dependency-key
    key: v2-shared-dependency-{{ .Branch }}-{{ checksum "shared/package.json" }}
  - &shared-dependency-keys
    keys:
      - v2-shared-dependency-{{ .Branch }}-{{ checksum "shared/package.json" }}
      - v2-shared-dependency-{{ .Branch }}-
      - v2-shared-dependency-
  - &restore-shared-dependencies
    name: Restore Shared Dependency Cache
    <<: *shared-dependency-keys

  ## FUNCTIONS CACHES
  - &functions-dependency-key
    key: functions-dependency-{{ .Branch }}-{{ checksum "functions/package.json" }}
  - &functions-dependency-keys
    keys:
      - functions-dependency-{{ .Branch }}-{{ checksum "functions/package.json" }}
      - functions-dependency-{{ .Branch }}-
      - functions-dependency-
  - &restore-functions-dependencies
    name: Restore functionsDependency Cache
    <<: *functions-dependency-keys

  ## ROOT CACHES
  - &root-dependency-key
    key: root-dependency-{{ .Branch }}-{{ checksum "package.json" }}
  - &root-dependency-keys
    keys:
      - root-dependency-{{ .Branch }}-{{ checksum "package.json" }}
      - root-dependency-{{ .Branch }}-
      - root-dependency-
  - &restore-root-dependencies
    name: Restore RootDependency Cache
    <<: *root-dependency-keys


  ## Slack Configs
  - &webhook-engineering-ci
    webhook: "https://hooks.slack.com/services/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"

  - &notify-job-started-slack
    <<: *webhook-engineering-ci
    color: '#42e2f4'
    message: "Job \\`$CIRCLE_JOB\\` starting on branch *$CIRCLE_BRANCH* <https://circleci.com/workflow-run/$CIRCLE_WORKFLOW_ID|Workflow>"

jobs:
  get-changes:
    executor: cactus-web
    steps:
      - checkout
      - run: mkdir -p workspace
      - run: . git-folder.sh
      - run: ls -a | grep modules_to_deploy.txt
      - run:
          name: "Determine Modules to Deploy"
          command: |
            echo "Printing output & copying file"
            cat modules_to_deploy.txt
            cp modules_to_deploy.txt workspace
      # Persist the specified paths (workspace/echo-output) into the workspace for use in downstream job.
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: "workspace"
          # Must be relative path from root
          paths:
            - modules_to_deploy.txt

  deploy-stage:
    executor: cactus-web
    steps:
      - slack/notify: *notify-job-started-slack
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace
      - run:
          name: "Deploy to Modules Firebase"
          command: |
            echo "The current build output is"
            echo "Deploy Modules: $(cat /tmp/workspace/modules_to_deploy.txt)"
            MODULES=$(cat /tmp/workspace/modules_to_deploy.txt || "NONE")

            if [[ `cat /tmp/workspace/modules_to_deploy.txt` == "NONE" ]]; then
              echo "Nothing to Deploy";
              exit 0
            else
              echo "Starting firebase deploy for --only ${MODULES}"
              npx firebase deploy --only $MODULES -P stage
            fi
      - slack/status:
          <<: *webhook-engineering-ci
          fail_only: true

  install-functions:
    executor: cactus-web
    steps:
      - slack/notify: *notify-job-started-slack
      - checkout
      - restore_cache: *restore-functions-dependencies
      - run: npm --prefix functions install
      - save_cache:
          name: "Save Functions Dependencies to Cache"
          paths:
            - functions/node_modules
          <<: *functions-dependency-key

      - slack/status:
          <<: *webhook-engineering-ci
          fail_only: true

  install-shared:
    executor: cactus-web
    steps:
      - slack/notify: *notify-job-started-slack
      - checkout
      - restore_cache: *restore-shared-dependencies
      - run: npm --prefix shared install
      - save_cache:
          name: "Save Shared Dependencies to Cache"
          paths:
            - shared/node_modules
          <<: *shared-dependency-key
      - slack/status:
          <<: *webhook-engineering-ci
          fail_only: true

  install-root:
    executor: cactus-web
    steps:
      - slack/notify: *notify-job-started-slack
      - checkout
      # Download and cache dependencies
      - restore_cache: *restore-root-dependencies
      - run: npm --prefix shared install
      - save_cache:
          name: "Save Shared Dependencies to Cache"
          paths:
            - shared/node_modules
          <<: *root-dependency-key
      - slack/status:
          <<: *webhook-engineering-ci
          fail_only: true

  install-web:
    executor: cactus-web
    steps:
      - slack/notify: *notify-job-started-slack

      - checkout

      # Download and cache dependencies
      - restore_cache: *restore-web-dependencies

      - run: npm --prefix web install

      - save_cache:
          name: "Save Web Dependencies to Cache"
          paths:
            - web/node_modules
          <<: *web-dependency-key

      - slack/status:
          <<: *webhook-engineering-ci
          fail_only: true

  test-web:
    executor: cactus-web
    steps:
      - slack/notify: *notify-job-started-slack
      - checkout
      - restore_cache: *restore-web-dependencies
      - restore_cache: *restore-shared-dependencies
      - run:
          name: "TSLint"
          command: npm --prefix web run tslint
      - run:
          name: "Compile TypeScript"
          command: npm --prefix web run tsc
      - run:
          name: "Run Unit Tests"
          command: npm --prefix web test
      - slack/status:
          <<: *webhook-engineering-ci
          fail_only: true
  test-functions:
    executor: cactus-web
    steps:
      - slack/notify: *notify-job-started-slack
      - checkout
      - restore_cache: *restore-functions-dependencies
      - restore_cache: *restore-shared-dependencies
      - run:
          name: "TSLint"
          command: npm --prefix functions run lint
      - run:
          name: "Build Sources"
          command: npm --prefix functions run build
      - run:
          name: "Run Unit Tests"
          command: npm --prefix functions test
      - slack/status:
          <<: *webhook-engineering-ci
          fail_only: true

  test-shared:
    executor: cactus-web
    steps:
      - slack/notify: *notify-job-started-slack
      - checkout
      - restore_cache: *restore-shared-dependencies
      - run:
          name: "TSLint"
          command: npm --prefix shared run lint
      - run:
          name: "Run Unit Tests"
          command: npm --prefix shared test
      - slack/status:
          <<: *webhook-engineering-ci
          fail_only: true

workflows:
  version: 2.1
  web_build_and_test:
    jobs:
      - install-root:
          name: &root_install_name "Root: Install Dependencies"
      - get-changes:
          name: &get_changes_name "Get module changes"
          requires:
            - *root_install_name
      - install-shared:
          name: &shared_install_name "Shared: Install Dependencies"
          requires:
            - *get_changes_name
      - install-web:
          name: &web_install_name "Web: Install Dependencies"
          requires:
            - *get_changes_name
      - install-functions:
          name: &functions_install_name "Functions: Install Dependencies"
          requires:
            - *get_changes_name
      - test-shared:
          name: &test_shared_name "Shared Tests"
          requires:
            - *root_install_name
            - *shared_install_name
      - test-web:
          name: &test_web_name "Web Tests"
          requires:
            - *shared_install_name
            - *root_install_name
            - *web_install_name
      - test-functions:
          name: &test_functions_name "API Tests"
          requires:
            - *root_install_name
            - *shared_install_name
            - *functions_install_name
      - deploy-stage:
          name: &deploy_stage_name "Deploy Stage"
          requires:
            - *root_install_name
            - *test_web_name
            - *test_shared_name
            - *shared_install_name
            - *test_functions_name
            - *functions_install_name
            - *web_install_name
            - *get_changes_name
      - stage-approval:
          type: approval
          requires:
            - *deploy_stage_name